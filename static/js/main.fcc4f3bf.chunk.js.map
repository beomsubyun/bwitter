{"version":3,"sources":["fbase.js","components/Bweet.js","components/BweetForm.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","Bweet","bweetObj","isOwner","useState","isEditing","setIsEditing","text","updatedBweet","setUpdatedBweet","deleteBweet","a","window","confirm","deleteDoc","doc","id","deleteObject","ref","image","toggleIsEditing","prev","onSubmit","event","preventDefault","TargetDocRef","updateDoc","value","onChange","target","type","placeholder","required","maxLength","onClick","src","width","height","alt","BweetForm","userObj","bweet","setBweet","setImage","imageInput","useRef","imageUrlFromStorage","imagesRef","uid","uuidv4","uploadString","getDownloadURL","bweetWithImage","createdAt","Date","now","creatorId","addDoc","collection","console","error","accept","targetImage","files","reader","FileReader","onloadend","result","currentTarget","readAsDataURL","current","Home","bweets","setBweets","useEffect","bweetsQueryByDesc","query","orderBy","onSnapshot","snapshot","bweetArr","docs","map","data","item","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Navigation","to","displayName","Profile","refreshUser","myBweets","setMyBweets","newDisplayName","setNewDisplayName","getMyBweets","myBweetsQueryByDesc","where","getDocs","myBweetsDocs","myBweetsArr","history","useHistory","updateProfile","currentUser","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAiBaA,GAFDC,YAVW,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,iCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKkBC,eACdC,EAAYC,cACZC,EAAiBC,c,OC0DfC,EAxED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAASF,EAASK,MAA1D,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAW,uCAAG,sBAAAC,EAAA,0DACPC,OAAOC,QAAQ,+CADR,gCAGVC,YAAUC,YAAIlB,EAAW,QAASK,EAASc,KAHjC,uBAIVC,YAAaC,YAAInB,EAAgBG,EAASiB,QAJhC,2CAAH,qDAQXC,EAAkB,WACtBd,GAAa,SAACe,GAAD,OAAWA,MAUpBC,EAAQ,uCAAG,WAAOC,GAAP,eAAAZ,EAAA,6DACfY,EAAMC,iBACAC,EAAeV,YAAIlB,EAAW,QAASK,EAASc,IAFvC,SAGTU,YAAUD,EAAc,CAC5BlB,KAAMC,IAJO,OAMfF,GAAa,GANE,2CAAH,sDASd,OACE,8BACGD,EACC,qCACE,uBAAMiB,SAAUA,EAAhB,UACE,uBACEK,MAAOnB,EACPoB,SAvBK,SAACL,GAChB,IACYI,EACRJ,EADFM,OAAUF,MAEZlB,EAAgBkB,IAoBNG,KAAK,OACLC,YAAY,uBACZC,UAAQ,EACRC,UAAW,MAEb,uBAAOH,KAAK,SAASH,MAAM,sBAE7B,wBAAQO,QAASd,EAAjB,uBAGF,qCACE,6BAAKlB,EAASK,OACbL,EAASiB,OACR,qBACEgB,IAAKjC,EAASiB,MACdiB,MAAM,OACNC,OAAO,OACPC,IAAI,UAGPnC,GACC,qCACE,wBAAQ+B,QAASd,EAAjB,oBACA,wBAAQc,QAASxB,EAAjB,6B,QCoBC6B,EAlFG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,EAA0BpC,mBAAS,IAAnC,mBAAOqC,EAAP,KAAcC,EAAd,KACA,EAA0BtC,mBAAS,IAAnC,mBAAOe,EAAP,KAAcwB,EAAd,KACMC,EAAaC,mBAEbvB,EAAQ,uCAAG,WAAOC,GAAP,mBAAAZ,EAAA,yDACfY,EAAMC,iBACFsB,EAAsB,GACZ,KAAV3B,EAHW,uBAIP4B,EAAY7B,YAAInB,EAAD,UAAoByC,EAAQQ,IAA5B,YAAmCC,gBAJ3C,SAKPC,YAAaH,EAAW5B,EAAO,YALxB,uBAMegC,YAAeJ,GAN9B,OAMbD,EANa,qBAQTM,EAAiB,CACrB7C,KAAMkC,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnB7B,MAAO2B,GAZM,oBAePW,YAAOC,YAAW7D,EAAW,SAAUuD,GAfhC,2DAiBbO,QAAQC,MAAR,MAjBa,QAmBflB,EAAS,IACTC,EAAS,IApBM,2DAAH,sDAkDd,OACE,uBAAMrB,SAAUA,EAAhB,UACE,uBACEK,MAAOc,EACPb,SA/BW,SAACL,GAChB,IACYI,EACRJ,EADFM,OAAUF,MAEZe,EAASf,IA4BLG,KAAK,OACLC,YAAY,uBACZC,UAAQ,EACRC,UAAW,MAEb,uBACEH,KAAK,OACL+B,OAAO,UACPjC,SAjCe,SAACL,GACpB,IAGMuC,EADFvC,EADFM,OAAUkC,MAEc,GACpBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAAC3C,GAClB,IACmB4C,EACf5C,EADF6C,cAAiBD,OAEnBxB,EAASwB,IAEXH,EAAOK,cAAcP,IAsBjB5C,IAAK0B,IAEP,uBAAOd,KAAK,SAASH,MAAM,UAC1BR,GACC,gCACE,qBAAKgB,IAAKhB,EAAOiB,MAAM,OAAOC,OAAO,OAAOC,IAAI,YAChD,wBAAQJ,QAzBG,WACjBS,EAAS,IACTC,EAAW0B,QAAQ3C,MAAQ,IAuBrB,0BC1CK4C,EAjCF,SAAC,GAAiB,IAAf/B,EAAc,EAAdA,QACd,EAA4BpC,mBAAS,IAArC,mBAAOoE,EAAP,KAAeC,EAAf,KAgBA,OAdAC,qBAAU,WACR,IAAMC,EAAoBC,YACxBlB,YAAW7D,EAAW,SACtBgF,YAAQ,YAAa,SAEvBC,YAAWH,GAAmB,SAACI,GAC7B,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACnE,GAAD,oBACjCC,GAAID,EAAIC,IACLD,EAAIoE,WAETV,EAAUO,QAEX,IAGD,qCACE,cAAC,EAAD,CAAWxC,QAASA,IACpB,8BACGgC,EAAOU,KAAI,SAACE,GAAD,OACV,cAAC,EAAD,CAEElF,SAAUkF,EACVjF,QAASiF,EAAK5B,YAAchB,EAAQQ,KAF/BoC,EAAKpE,a,QCuCPqE,EA7DE,WACf,MAA0BjF,mBAAS,IAAnC,mBAAOkF,EAAP,KAAcC,EAAd,KACA,EAAgCnF,mBAAS,IAAzC,mBAAOoF,EAAP,KAAiBC,EAAjB,KACA,EAAoCrF,oBAAS,GAA7C,mBAAOsF,EAAP,KAAmBC,EAAnB,KAIM/D,EAAW,SAACL,GAChB,MAEIA,EADFM,OAAU+D,EADZ,EACYA,KAAMjE,EADlB,EACkBA,MAEL,UAATiE,EACFL,EAAS5D,GAET8D,EAAY9D,IAIVL,EAAQ,uCAAG,WAAOC,GAAP,SAAAZ,EAAA,yDACfY,EAAMC,iBADS,UAGTkE,EAHS,gCAILG,YAA+B1G,EAAamG,EAAOE,GAJ9C,6CAMLM,YAA2B3G,EAAamG,EAAOE,GAN1C,yDASb7B,QAAQ,KAAMoC,SATD,0DAAH,sDAYd,OACE,qCACE,uBAAMzE,SAAUA,EAAhB,UACE,uBACEsE,KAAK,QACL9D,KAAK,OACLC,YAAY,QACZC,UAAQ,EACRL,MAAO2D,EACP1D,SAAUA,IAEZ,uBACEgE,KAAK,WACL9D,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRL,MAAO6D,EACP5D,SAAUA,IAEZ,uBACEE,KAAK,SACLH,MAAO+D,EAAa,iBAAmB,eAG3C,sBAAMxD,QAjDY,kBAAMyD,GAAc,SAACtE,GAAD,OAAWA,MAiDjD,SACGqE,EAAa,UAAY,uBCpBnBM,EAjCF,WACX,IAAMC,EAAa,uCAAG,WAAO1E,GAAP,iBAAAZ,EAAA,6DAERiF,EACRrE,EADFM,OAAU+D,KAFQ,SAML,WAATA,EACFM,EAAW,IAAIC,IACG,WAATP,IACTM,EAAW,IAAIE,KATC,SAWZC,YAAgBlH,EAAa+G,GAXjB,uDAalBvC,QAAQ,KAAMoC,SAbI,yDAAH,sDAiBnB,OACE,qCACE,cAAC,EAAD,IACA,gCACE,wBAAQ7D,QAAS+D,EAAeL,KAAK,SAArC,kCAGA,wBAAQ1D,QAAS+D,EAAeL,KAAK,SAArC,yCChBOU,EAfI,SAAC,GAAiB,IAAf9D,EAAc,EAAdA,QACpB,OACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAM+D,GAAG,IAAT,oBAEF,6BACE,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqB/D,EAAQgE,YAA7B,4BCgEKC,EA/DC,SAAC,GAA8B,IAA5BjE,EAA2B,EAA3BA,QAASkE,EAAkB,EAAlBA,YAC1B,EAAgCtG,mBAAS,IAAzC,mBAAOuG,EAAP,KAAiBC,EAAjB,KACA,EAA4CxG,mBAAS,IAArD,mBAAOyG,EAAP,KAAuBC,EAAvB,KACApC,qBAAU,WACRqC,MACC,IAEH,IAAMA,EAAW,uCAAG,gCAAApG,EAAA,6DACZqG,EAAsBpC,YAC1BlB,YAAW7D,EAAW,SACtBoH,YAAM,YAAa,KAAMzE,EAAQQ,KACjC6B,YAAQ,YAAa,SAJL,SAMSqC,YAAQF,GANjB,OAMZG,EANY,OAOZC,EAAcD,EAAalC,KAAKC,KAAI,SAACnE,GAAD,oBACxCC,GAAID,EAAIC,IACLD,EAAIoE,WAETyB,EAAYQ,GAXM,2CAAH,qDAcXC,EAAUC,cAaVhG,EAAQ,uCAAG,WAAOC,GAAP,SAAAZ,EAAA,6DACfY,EAAMC,iBADS,SAET+F,YAAcpI,EAAYqI,YAAa,CAC3ChB,YAAaK,IAHA,OAKfH,IALe,2CAAH,sDAOd,OACE,qCACGlE,EAAQgE,YADX,aAEE,wBAAQtE,QAtBG,WACb/C,EAAYsI,UACZJ,EAAQK,KAAK,MAoBX,qBACA,8BACGf,EAASzB,KAAI,SAACE,GAAD,OACZ,8BAAoBA,EAAK7E,MAAf6E,EAAKpE,SAGnB,uBAAMM,SAAUA,EAAhB,UACE,uBACEK,MAAOkF,EACPjF,SA1BS,SAACL,GAChB,IACYI,EACRJ,EADFM,OAAUF,MAEZmF,EAAkBnF,IAuBZG,KAAK,OACLC,YAAaS,EAAQgE,cAEvB,uBAAO1E,KAAK,SAASH,MAAM,kBCtCpBgG,MAxBf,YAA0D,IAArCC,EAAoC,EAApCA,WAAYpF,EAAwB,EAAxBA,QAASkE,EAAe,EAAfA,YACxC,OACE,eAAC,IAAD,WACGkB,GAAc,cAAC,EAAD,CAAYpF,QAASA,IACpC,cAAC,IAAD,UACGoF,EACC,qCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMtF,QAASA,MAEjB,cAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAAStF,QAASA,EAASkE,YAAaA,SAI5C,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,YCsBGC,EAzCH,WACV,MAAwB3H,oBAAS,GAAjC,mBAAO4H,EAAP,KAAaC,EAAb,KACA,EAA8B7H,mBAAS,MAAvC,mBAAOoC,EAAP,KAAgB0F,EAAhB,KAEAxD,qBAAU,WACRvF,EAAYgJ,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACT5B,YAAa4B,EAAK5B,YAClBxD,IAAKoF,EAAKpF,KAGD,MAEbiF,GAAQ,QAET,IAUH,OACE,mCACGD,EACC,cAAC,EAAD,CACEJ,WAAYS,QAAQ7F,GACpBA,QAASA,EACTkE,YAdY,WAClB,IAAM0B,EAAOjJ,EAAYqI,YACzBU,EAAW,CACT1B,YAAa4B,EAAK5B,YAClBxD,IAAKoF,EAAKpF,SAaR,qBCnCRsF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fcc4f3bf.chunk.js","sourcesContent":["import { initializeApp } from \"@firebase/app\";\r\nimport { getAuth } from \"@firebase/auth\";\r\nimport { getFirestore } from \"@firebase/firestore\";\r\nimport { getStorage } from \"@firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAiqp2JpPCCnk3K93ojB-s2ape_41Pgxlw\",\r\n  authDomain: \"bwitter-24f53.firebaseapp.com\",\r\n  databaseURL: \"gs://bwitter-24f53.appspot.com\",\r\n  projectId: \"bwitter-24f53\",\r\n  storageBucket: \"bwitter-24f53.appspot.com\",\r\n  messagingSenderId: \"501137222143\",\r\n  appId: \"1:501137222143:web:eba474b1215a2cec8a1fca\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\r\nimport { ref, deleteObject } from \"@firebase/storage\";\r\n\r\nconst Bweet = ({ bweetObj, isOwner }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [updatedBweet, setUpdatedBweet] = useState(bweetObj.text);\r\n\r\n  const deleteBweet = async () => {\r\n    const ok = window.confirm(\"Are you sure you wnat to delete this bweet?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(dbService, \"bweet\", bweetObj.id));\r\n      await deleteObject(ref(storageService, bweetObj.image));\r\n    }\r\n  };\r\n\r\n  const toggleIsEditing = () => {\r\n    setIsEditing((prev) => !prev);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUpdatedBweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const TargetDocRef = doc(dbService, \"bweet\", bweetObj.id);\r\n    await updateDoc(TargetDocRef, {\r\n      text: updatedBweet,\r\n    });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isEditing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              value={updatedBweet}\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              placeholder=\"What's on your mind?\"\r\n              required\r\n              maxLength={120}\r\n            ></input>\r\n            <input type=\"submit\" value=\"Update a Bweet\"></input>\r\n          </form>\r\n          <button onClick={toggleIsEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{bweetObj.text}</h4>\r\n          {bweetObj.image && (\r\n            <img\r\n              src={bweetObj.image}\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n              alt=\"Bweet\"\r\n            ></img>\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={toggleIsEditing}>Update</button>\r\n              <button onClick={deleteBweet}>Delete</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bweet;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport { ref, uploadString, getDownloadURL } from \"@firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst BweetForm = ({ userObj }) => {\r\n  const [bweet, setBweet] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const imageInput = useRef();\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let imageUrlFromStorage = \"\";\r\n    if (image !== \"\") {\r\n      const imagesRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      await uploadString(imagesRef, image, \"data_url\");\r\n      imageUrlFromStorage = await getDownloadURL(imagesRef);\r\n    }\r\n    const bweetWithImage = {\r\n      text: bweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      image: imageUrlFromStorage,\r\n    };\r\n    try {\r\n      await addDoc(collection(dbService, \"bweet\"), bweetWithImage);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    setBweet(\"\");\r\n    setImage(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setBweet(value);\r\n  };\r\n\r\n  const previewImage = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const targetImage = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (event) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = event;\r\n      setImage(result);\r\n    };\r\n    reader.readAsDataURL(targetImage);\r\n  };\r\n\r\n  const clearImage = () => {\r\n    setImage(\"\");\r\n    imageInput.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={bweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        required\r\n        maxLength={120}\r\n      ></input>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={previewImage}\r\n        ref={imageInput}\r\n      ></input>\r\n      <input type=\"submit\" value=\"Bweet\"></input>\r\n      {image && (\r\n        <div>\r\n          <img src={image} width=\"50px\" height=\"50px\" alt=\"Preview\"></img>\r\n          <button onClick={clearImage}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BweetForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Bweet from \"components/Bweet\";\r\nimport BweetForm from \"components/BweetForm\";\r\nimport { dbService } from \"fbase\";\r\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [bweets, setBweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const bweetsQueryByDesc = query(\r\n      collection(dbService, \"bweet\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    onSnapshot(bweetsQueryByDesc, (snapshot) => {\r\n      const bweetArr = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setBweets(bweetArr);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <BweetForm userObj={userObj} />\r\n      <div>\r\n        {bweets.map((item) => (\r\n          <Bweet\r\n            key={item.id}\r\n            bweetObj={item}\r\n            isOwner={item.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        await createUserWithEmailAndPassword(authService, email, password);\r\n      } else {\r\n        await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n    } catch (error) {\r\n      console(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        ></input>\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        ></input>\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        ></input>\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService } from \"fbase\";\r\nimport {\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    try {\r\n      if (name === \"google\") {\r\n        provider = new GoogleAuthProvider();\r\n      } else if (name === \"github\") {\r\n        provider = new GithubAuthProvider();\r\n      }\r\n      await signInWithPopup(authService, provider);\r\n    } catch (error) {\r\n      console(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName}의 profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  where,\r\n  getDocs,\r\n} from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [myBweets, setMyBweets] = useState([]);\r\n  const [newDisplayName, setNewDisplayName] = useState(\"\");\r\n  useEffect(() => {\r\n    getMyBweets();\r\n  }, []);\r\n\r\n  const getMyBweets = async () => {\r\n    const myBweetsQueryByDesc = query(\r\n      collection(dbService, \"bweet\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    const myBweetsDocs = await getDocs(myBweetsQueryByDesc);\r\n    const myBweetsArr = myBweetsDocs.docs.map((doc) => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    }));\r\n    setMyBweets(myBweetsArr);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const logOut = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateProfile(authService.currentUser, {\r\n      displayName: newDisplayName,\r\n    });\r\n    refreshUser();\r\n  };\r\n  return (\r\n    <>\r\n      {userObj.displayName}'s Profile\r\n      <button onClick={logOut}>Log Out</button>\r\n      <div>\r\n        {myBweets.map((item) => (\r\n          <div key={item.id}>{item.text}</div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder={userObj.displayName}\r\n        ></input>\r\n        <input type=\"submit\" value=\"update\"></input>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nfunction AppRouter({ isLoggedIn, userObj, refreshUser }) {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}